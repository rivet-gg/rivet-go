// This file was auto-generated by Fern from our API Definition.

package games

import (
	fmt "fmt"
)

type BuildCompression string

const (
	// None compression.
	BuildCompressionNone BuildCompression = "none"
	// LZ4 compression. Use the minimum compression level.
	BuildCompressionLz4 BuildCompression = "lz4"
)

func NewBuildCompressionFromString(s string) (BuildCompression, error) {
	switch s {
	case "none":
		return BuildCompressionNone, nil
	case "lz4":
		return BuildCompressionLz4, nil
	}
	var t BuildCompression
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (b BuildCompression) Ptr() *BuildCompression {
	return &b
}

type BuildKind string

const (
	// Docker image archive generated by `docker save`.
	BuildKindDockerImage BuildKind = "docker_image"
	// OCI-compliant bundle.
	BuildKindOciBundle BuildKind = "oci_bundle"
)

func NewBuildKindFromString(s string) (BuildKind, error) {
	switch s {
	case "docker_image":
		return BuildKindDockerImage, nil
	case "oci_bundle":
		return BuildKindOciBundle, nil
	}
	var t BuildKind
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (b BuildKind) Ptr() *BuildKind {
	return &b
}
